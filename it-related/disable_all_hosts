#!/bin/bash
# vim: sts=4 sw=4 ai:

set -eu

USAGE="usage: ${0##*/} host_file_name
arguements:
    host_file_name  name of file of hostnames, with title

options:
    -h|--help	    this message
"

# boilerplate
progdir=$(cd $(dirname $0);/bin/pwd)
warn() { for m; do echo "$m"; done 2>&1 ; }
die() { warn "$@"; exit 1; }
usage() { warn "$@" "${USAGE:-}"; test $# -eq 0; exit $?; }
cleanup() { test -z "${KEEP:-}" -a -d ${tmpdir:=<NO_SUCH_DIR>} && rm -rf $tmpdir ; }
trap cleanup EXIT

# configuration
mysql_ini=$progdir/mysql.ini

while test $# -gt 0; do
    case "$1" in
    -h|--help) usage ;;
    -*) usage "unsupported option '$1'" ;;
    *) break ;;
    esac
    shift
done

test $# -eq 1 || usage "wrong number of options '$#'"
hosts="$1"
test -r "$hosts" || usage "can't read '$hosts'"
test -r "$hosts.previously_enabled" || usage "first run: get_enabled_hosts $hosts"
test -r $mysql_ini || usage "Missing mysql config file '$mysql_ini'"

tmpdir=$(mktemp -d /tmp/${0##*/}.$USER.XXXXXX)

# convert host names (fqdn) to host only, strip column title
tail -n +2 "$hosts" | cut -d . -f 1 > $tmpdir/hosts_to_check

# create sql query
{
    echo "update slaves set enabled = 0 where name in ("
    # don't output comma after final hostname
    delim=
    while read slave_name; do
	echo -en "$delim\"$slave_name\""
	delim=',\n'
    done < $tmpdir/hosts_to_check
    echo
    echo ");"
} > $tmpdir/sql_query

# run query
mysql --defaults-file=$mysql_ini -e "source $tmpdir/sql_query" > $tmpdir/disable_update

# if we're here, everything ran okay - save off the results in the same dir as the original host list
disabled=$hosts.disabled

test -f $disabled && warn "Found older output - you'll be asked what to do"
mv -i $tmpdir/disable_update $disabled

# done
exit $?


