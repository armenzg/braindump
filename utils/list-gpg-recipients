#!/usr/bin/env python
"""
Display recipients of gpg encrypted files
"""

try:
    from sh import gpg
except ImportError:
    raise SystemExit("please run 'pip install --user sh'")
import argparse
import re

grab_id = re.compile(r'''^(gpg):.*ID\s+(?P<gpg_id>\w+)?''')

get_key_ids = gpg.bake('--no-default-keyring', '--secret-keyring', '/dev/null',
                       '--list-only', _iter='err')


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--only', dest='user',
                        help='only display files USER can decrypt',
                        metavar='USER')
    parser.add_argument('-r', action='store_true', default=False,
                        dest="ids_only",
                        help='format for use as recipients for encryption')
    parser.add_argument('files', metavar='FILE', nargs='+',
                        help='a GPG/PGP encrypted file')
    args = parser.parse_args()
    keys = set()
    for f in args.files:
        for l in get_key_ids(f):
            gpg_id = grab_id.match(l)
            if gpg_id:
                this_id = gpg_id.groupdict()['gpg_id']
                if args.ids_only:
                    keys.add("-r 0x{}".format(this_id))
            elif not args.ids_only:
                this_user = "{1} 0x{0}".format(this_id, l.strip())
                if args.user:
                    if args.user in this_user:
                        keys.add(f)
                        break
                else:
                    keys.add(this_user)
    values = list(keys)
    values.sort()
    if args.ids_only:
        join = ', '
    else:
        join = '\n'
    if values:
        text = join.join(values)
        print text

if __name__ == '__main__':
    main()
